(()=>{"use strict";class t{static add(e,s=0,i=0,a=-1,h=-1){t.imagesString.push(e),t.imagesStat.push([s,i,a,h])}static addText(e,s,i,a=0,h=0){t.text.push(e),t.textFont.push(s),t.textAlign.push(i),t.textStat.push([a,h]),t.ctx&&(t.ctx.font=s,t.ctx.textAlign=i,t.ctx.fillText(e,a,h))}static draw(){const e=t.imagesString.length;let s=0;for(let i=0;i<e;i++)t.images[i]=new Image,t.images[i].src=t.imagesString[i],t.images[i].onload=function(){s++,s==e&&t.drawAll()}}static drawAll(){var e,s;for(let i=0;i<t.imagesString.length;i++)-1==t.imagesStat[i][2]?null===(e=t.ctx)||void 0===e||e.drawImage(t.images[i],t.imagesStat[i][0],t.imagesStat[i][1]):null===(s=t.ctx)||void 0===s||s.drawImage(t.images[i],t.imagesStat[i][0],t.imagesStat[i][1],t.imagesStat[i][2],t.imagesStat[i][3]);for(let e=0;e<t.text.length;e++)t.ctx&&(t.ctx.font=t.textFont[e],t.ctx.textAlign=t.textAlign[e],t.ctx.fillText(t.text[e],t.textStat[e][0],t.textStat[e][1]));t.isDrawPlayButton&&(t.drawPlayButton(),t.setDrawPlayButton(!1)),t.text.length=0,t.textFont.length=0,t.textAlign.length=0,t.textStat.length=0,t.imagesString.length=0,t.imagesStat.length=0}static setDrawPlayButton(e){t.isDrawPlayButton=e}static drawPlayButton(){t.ctx&&(t.ctx.beginPath(),t.ctx.arc(350,260,40,0,2*Math.PI),t.ctx.stroke(),t.ctx.beginPath(),t.ctx.moveTo(340,240),t.ctx.lineTo(340,280),t.ctx.lineTo(370,260),t.ctx.fill())}}t.canvas=document.getElementById("game"),t.ctx=t.canvas.getContext("2d"),t.imagesString=[],t.imagesStat=[],t.images=[],t.text=[],t.textFont=[],t.textAlign=[],t.textStat=[],t.isDrawPlayButton=!1;class e{constructor(t){this.sprites=t,this.idx=0,this.delay=0}getCurrent(){return this.idx>=this.sprites.length&&console.log("Error Sprites"),this.sprites[this.idx]}goToNext(t){return this.delay+=1*t*(b.getGameSpeed()/2-y/2+1),this.delay>6&&(this.idx++,this.delay=0),this.idx%=this.sprites.length,this.idx}setIdx(t){this.idx=t%this.sprites.length}getLength(){return this.sprites.length}getIdx(){return this.idx}}var s;!function(t){t[t.MOVE=1]="MOVE",t[t.JUMP=2]="JUMP",t[t.FALL=3]="FALL",t[t.DEAD=4]="DEAD",t[t.IDLE=5]="IDLE",t[t.DUCK=6]="DUCK"}(s||(s={}));class i{constructor(){console.log("TRex created"),this.moveSprite=new e(["assets/dinosaur-sprites/Run (1).png","assets/dinosaur-sprites/Run (2).png","assets/dinosaur-sprites/Run (3).png","assets/dinosaur-sprites/Run (4).png","assets/dinosaur-sprites/Run (5).png","assets/dinosaur-sprites/Run (6).png","assets/dinosaur-sprites/Run (7).png","assets/dinosaur-sprites/Run (8).png"]),this.jumpSprite=new e(["assets/dinosaur-sprites/Jump (1).png","assets/dinosaur-sprites/Jump (2).png","assets/dinosaur-sprites/Jump (3).png","assets/dinosaur-sprites/Jump (4).png","assets/dinosaur-sprites/Jump (5).png","assets/dinosaur-sprites/Jump (6).png","assets/dinosaur-sprites/Jump (7).png","assets/dinosaur-sprites/Jump (8).png"]),this.fallSprite=new e(["assets/dinosaur-sprites/Jump (9).png","assets/dinosaur-sprites/Jump (10).png","assets/dinosaur-sprites/Jump (11).png","assets/dinosaur-sprites/Jump (12).png"]),this.deadSprite=new e(["assets/dinosaur-sprites/Dead (6).png"]),this.idleSprite=new e(["assets/dinosaur-sprites/Idle (1).png"]),this.duckSprite=new e(["assets/dinosaur-sprites/Duck (1).png"]),this.start()}start(){this.xDefault=10,this.yDefault=250,this.jumpSizeDefault=5,this.widthDefault=100,this.heightDefault=100,this.width=this.widthDefault,this.height=this.heightDefault,this.x=this.xDefault,this.y=this.yDefault,this.jumpSize=this.jumpSizeDefault,this.state=s.MOVE}update(t){switch(this.state){case s.MOVE:this.move(t);break;case s.JUMP:this.jump(t);break;case s.FALL:this.fall(t);break;case s.DEAD:this.dead();break;case s.IDLE:this.idle();break;case s.DUCK:this.duck()}}getX(){return this.x}getY(){return this.y}getWidth(){return this.width}getHeight(){return this.height}setX(t){this.x=t}setY(t){this.y=t}setWidth(t){this.width=t}setHeight(t){this.height=t}getState(){return this.state}setState(t){this.state=t}getJumpSize(){return this.jumpSize}setJumpSize(t){this.jumpSize=t}resetX(){this.x=this.xDefault}resetY(){this.y=this.yDefault}resetWidth(){this.width=this.widthDefault}resetHeight(){this.height=this.heightDefault}resetJumpSize(){this.jumpSize=this.jumpSizeDefault}move(e){this.resetX(),this.resetY(),this.resetWidth(),this.resetHeight(),this.resetJumpSize(),this.fallSprite.setIdx(0),this.jumpSprite.setIdx(0),this.moveSprite.goToNext(e),t.add(this.moveSprite.getCurrent(),this.x,this.y,this.width,this.height)}jump(e){this.resetWidth(),this.resetHeight(),this.jumpSize>this.jumpSizeDefault&&this.resetJumpSize(),this.moveSprite.setIdx(0),this.fallSprite.setIdx(0),this.jumpSize=this.jumpSize-1*e/40,this.y-=this.jumpSize*e*b.getGameSpeed()/y,this.jumpSprite.getIdx()+1<this.jumpSprite.getLength()&&this.jumpSprite.goToNext(e),this.y<=0&&(this.state=s.FALL),t.add(this.jumpSprite.getCurrent(),this.x,this.y,this.width,this.height)}fall(e){this.resetWidth(),this.resetHeight(),this.jumpSize<this.jumpSizeDefault&&this.resetJumpSize(),this.jumpSprite.setIdx(0),this.moveSprite.setIdx(0),this.jumpSize=this.jumpSize+1*e,this.y+=this.jumpSize/5*e*b.getGameSpeed()/y,this.fallSprite.getIdx()+2<this.fallSprite.getLength()&&this.fallSprite.goToNext(e),this.y+10*this.jumpSize>=this.yDefault&&this.fallSprite.setIdx(this.fallSprite.getLength()-2),this.y+20*this.jumpSize>=this.yDefault&&this.fallSprite.setIdx(this.fallSprite.getLength()-1),this.y>=this.yDefault&&(this.y=this.yDefault,this.state=s.MOVE,this.fallSprite.setIdx(0)),t.add(this.fallSprite.getCurrent(),this.x,this.y,this.width,this.height)}dead(){this.width=4*this.widthDefault/3-10,this.height=2*this.heightDefault/3-10,this.y=this.heightDefault-this.height+10+this.yDefault,t.add(this.deadSprite.getCurrent(),this.x,this.y,this.width,this.height)}idle(){this.resetY(),t.add(this.idleSprite.getCurrent(),this.x,this.y,this.width,this.height)}duck(){this.resetJumpSize(),this.width=4*this.widthDefault/3-10,this.height=2*this.heightDefault/3-10,this.y=this.heightDefault-this.height+10+this.yDefault,t.add(this.duckSprite.getCurrent(),this.x,this.y,this.width,this.height)}}class a{constructor(){}start(t){}render(e,s=!1){t.add(this.sprite.getCurrent(),this.x,this.y,this.width,this.height),s||this.sprite.goToNext(e)}getX(){return this.x}getY(){return this.y}getWidth(){return this.width}setX(t){this.x=t}getMoveSpeed(){return this.moveSpeed}}class h extends a{constructor(t){super(),this.sprite=new e(["assets/Cactus/Cactus.png"]),this.start(t)}start(t){this.x=t,this.width=60,this.height=80,this.y=280,this.moveSpeed=.4}}const r="assets/fly-dinosaur/3.png",n="assets/fly-dinosaur/4.png",o="assets/fly-dinosaur/5.png";class u extends a{constructor(t){super(),this.sprite=new e([r,r,r,n,n,n,o,o,o,n,n,n]),this.start(t)}start(t){this.sprite.setIdx(0),this.x=t,this.width=90,this.height=80,this.y=[50,150,190][Math.floor(3*Math.random())],this.moveSpeed=2}}class g{constructor(){this.obstacles=[];const t=[1,2,4,4,5,6,6,8,8,10];t.sort((()=>Math.random()));for(let e=0;e<10;e++)t[e]%2?this.obstacles.push(new u(0)):this.obstacles.push(new h(0));this.start()}start(){let t=0;for(let e=0;e<10;e++)t=Math.floor(1e3*Math.random())+400+t,this.obstacles[e].start(t)}update(t,e=!1){const s=[];for(let i=0;i<this.obstacles.length;i++)this.obstacles[i].getX()<=D&&this.obstacles[i].render(t,e),e||(this.obstacles[i].getX()<=D&&this.obstacles[i].setX(this.obstacles[i].getX()-this.obstacles[i].getMoveSpeed()*t),this.obstacles[i].setX(this.obstacles[i].getX()-b.getGameSpeed()*t),this.obstacles[i].getX()<-this.obstacles[i].getWidth()&&!e&&s.push(i));if(e)return;let i=0;for(let t=0;t<this.obstacles.length;t++)i=i>this.obstacles[t].getX()?i:this.obstacles[t].getX();for(let t=0,e=0;t<s.length;t++)e=s[t],i+=Math.floor(1e3*Math.random())+400,this.obstacles[e].setX(i)}checkCollision(t){let e,s,i;const a=t.getX(),h=t.getY(),r=t.getWidth()-20;for(let t=0;t<this.obstacles.length;t++)if(e=this.obstacles[t].getX(),s=this.obstacles[t].getY(),i=this.obstacles[t].getWidth()-10,a+r>=e&&e+i>=a&&h+r>=s&&s+i>=h)return!0;return!1}}class d{constructor(){this.maxScore=0,this.start()}start(){this.score=0,this.level=1e3}update(e,s=!1){s?this.maxScore=this.maxScore>this.score?this.maxScore:this.score:(this.score+=b.getGameSpeed()/5*e,this.score>this.level&&(b.setGameSpeed(.5+b.getGameSpeed()),this.level+=3e3)),t.addText(Math.floor(this.score).toString(),"30px Cambria","start",20,30)}getScore(){return this.score}getMaxScore(){return this.maxScore}}const c=["assets/background/1.png","assets/background/3.png"];class l{constructor(){this.list=[],this.idx=0;for(let t=0;t<6;t++){const t=c[Math.floor(Math.random()*c.length)];for(let e=0;e<5;e++)this.list.push(t)}}getCurrent(){return this.list[this.idx]}getNext(){return this.list[(this.idx+1)%this.list.length]}setIdx(t){this.idx=t%this.list.length}getIdx(){return this.idx}goToNext(){this.idx=(this.idx+1)%this.list.length}}class p{constructor(){}display(e){const s=e.getBackground().getCurrent(),i=e.getBackground().getNext();t.add(s,e.getSceneNum(),0),e.getSceneNum()<=t.canvas.width-D&&t.add(i,e.getSceneNum()+D,0)}update(t,e){}clear(t){}}class S extends p{constructor(e){super(),t.canvas.addEventListener("mousedown",(t=>this.handleMouseDown(t,e)),!1)}display(e){super.display(e),t.addText("T-Rex Jump","bold 50px Cambria","center",350,150),t.addText(`Highscore: ${e.getScore().getMaxScore()}`,"30px Cambria","center",350,200),t.setDrawPlayButton(!0)}update(t,e){t.getTRex().setState(s.IDLE),t.getTRex().update(e),t.getObstacleManager().update(e,!0),t.getTRex().update(e)}handleMouseDown(e,s){const i=t.canvas.getBoundingClientRect(),a=e.clientX-i.left,h=e.clientY-i.top;(a-350)*(a-350)+(h-260)*(h-260)<1600&&(s.start(),s.getStateManager().getCurrentState().clear(s),s.getStateManager().setCurrentState(new m(s)))}clear(e){t.canvas.removeEventListener("mousedown",(t=>this.handleMouseDown(t,e)),!1)}}class x extends p{constructor(e){super(),t.canvas.addEventListener("mousedown",(t=>this.handleMouseDown(t,e)),!1)}display(e){super.display(e),t.addText("GAME OVER","bold 50px Cambria","center",350,150),t.addText(`Highscore: ${Math.floor(e.getScore().getMaxScore())}`,"30px Cambria","center",350,200),t.setDrawPlayButton(!0)}update(t,e){t.getTRex().setState(s.DEAD),t.getTRex().update(e),t.getObstacleManager().update(e,!0),t.getScore().update(e,!0),t.getTRex().update(e)}handleMouseDown(e,s){const i=t.canvas.getBoundingClientRect(),a=e.clientX-i.left,h=e.clientY-i.top;(a-350)*(a-350)+(h-260)*(h-260)<1600&&(s.start(),s.getStateManager().getCurrentState().clear(s),s.getStateManager().setCurrentState(new m(s)))}clear(e){t.canvas.removeEventListener("mousedown",(t=>this.handleMouseDown(t,e)),!1)}}class m extends p{constructor(e){super(),this.touchStart=[],this.touchEnd=[],t.canvas.addEventListener("keydown",(t=>this.handleKeyDown(t,e)),!0),t.canvas.addEventListener("keyup",(t=>this.handleKeyUp(t,e)),!0),t.canvas.addEventListener("touchstart",(t=>this.handleTouchStart(t)),!1),t.canvas.addEventListener("touchend",(t=>this.handleTouchEnd(t,e)),!1)}display(t){super.display(t)}update(t,e){t.getCloudManager().update(e),t.setSceneNum(t.getSceneNum()-b.getGameSpeed()*e),t.getSceneNum()<=-D&&(t.setSceneNum(t.getSceneNum()+D),t.getBackground().goToNext()),t.getTRex().update(e),t.getScore().update(e),t.getObstacleManager().update(e),t.getObstacleManager().checkCollision(t.getTRex())&&(t.getStateManager().getCurrentState().clear(t),t.getStateManager().setCurrentState(new x(t)))}clear(e){t.canvas.removeEventListener("keydown",(t=>this.handleKeyDown(t,e)),!0),t.canvas.removeEventListener("keyup",(t=>this.handleKeyUp(t,e)),!0),t.canvas.removeEventListener("touchstart",(t=>this.handleTouchStart(t)),!1),t.canvas.removeEventListener("touchend",(t=>this.handleTouchEnd(t,e)),!1)}handleKeyDown(t,e){switch(t.code){case"ArrowUp":case"Space":e.getTRex().getState()!==s.FALL&&e.getTRex().setState(s.JUMP);break;case"ArrowDown":e.getTRex().getState()!==s.JUMP&&e.getTRex().getState()!==s.FALL||(e.getTRex().setJumpSize(1.5*e.getTRex().getJumpSize()),e.getTRex().setState(s.FALL)),e.getTRex().getState()===s.MOVE&&e.getTRex().setState(s.DUCK)}}handleKeyUp(t,e){switch(t.preventDefault(),t.code){case"ArrowUp":case"Space":e.getTRex().getState()==s.JUMP&&e.getTRex().setState(s.FALL);break;case"ArrowDown":e.getTRex().getState()==s.DUCK&&e.getTRex().setState(s.MOVE)}}handleTouchStart(t){const e=t.touches[0],s=e.clientX,i=e.clientY;this.touchStart[0]=s,this.touchStart[1]=i}handleTouchEnd(t,e){const i=t.changedTouches[0],a=i.clientX,h=i.clientY;switch(this.touchEnd[0]=a,this.touchEnd[1]=h,this.getDirection()){case"U":e.getTRex().getState()!==s.FALL&&e.getTRex().setState(s.JUMP);break;case"D":e.getTRex().getState()!==s.JUMP&&e.getTRex().getState()!==s.FALL||(e.getTRex().setJumpSize(1.5*e.getTRex().getJumpSize()),e.getTRex().setState(s.FALL)),e.getTRex().getState()===s.MOVE&&e.getTRex().setState(s.DUCK)}this.touchStart.length=this.touchEnd.length=0}getDirection(){if(2!=this.touchStart.length||2!=this.touchEnd.length)return"N";const t=this.touchEnd[0]-this.touchStart[0],e=this.touchEnd[1]-this.touchStart[1];return t<0&&e<0?Math.abs(t)<Math.abs(e)?"U":"L":t<0&&e>0?Math.abs(t)<Math.abs(e)?"D":"L":t>0&&e<0?Math.abs(t)<Math.abs(e)?"U":"R":t>0&&e>0?Math.abs(t)<Math.abs(e)?"D":"R":"N"}}class w{constructor(t){this.currentState=new S(t)}setCurrentState(t){this.currentState=t}getCurrentState(){return this.currentState}updateCurrentState(t,e){this.currentState.update(t,e)}displayCurrentState(t){this.currentState.display(t)}}class f{constructor(t,s=50){this.sprite=new e(["./assets/background/cloud1.webp"]),this.start(t,s)}start(t,e){this.sprite.setIdx(0),this.x=t,this.width=90,this.height=80,this.y=e,this.moveSpeed=(Math.floor(10*Math.random())-5)/10}render(e,s=!1){t.add(this.sprite.getCurrent(),this.x,this.y,this.width,this.height),s||this.sprite.goToNext(e)}getX(){return this.x}getY(){return this.y}getWidth(){return this.width}getHeight(){return this.height}setX(t){this.x=t}setY(t){this.y=t}setWidth(t){this.width=t}setHeight(t){this.height=t}getMoveSpeed(){return this.moveSpeed}}class M{constructor(){this.clouds=[];for(let t=0;t<10;t++)this.clouds.push(new f(0));this.start()}start(){let t=0,e=0;for(let s=0;s<10;s++)t=Math.floor(400*Math.random())+100+t,e=Math.floor(100*Math.random())+50,this.clouds[s].start(t,e)}update(t,e=!1){const s=[];for(let i=0;i<this.clouds.length;i++)this.clouds[i].getX()<=D&&this.clouds[i].render(t,e),e||(this.clouds[i].getX()<=D&&this.clouds[i].setX(this.clouds[i].getX()-this.clouds[i].getMoveSpeed()*t),this.clouds[i].setX(this.clouds[i].getX()-b.getGameSpeed()*t),this.clouds[i].getX()<-this.clouds[i].getWidth()&&!e&&s.push(i));if(e)return;let i=0,a=0;for(let t=0;t<this.clouds.length;t++)i=i>this.clouds[t].getX()?i:this.clouds[t].getX();for(let t=0,e=0;t<s.length;t++)e=s[t],i+=Math.floor(400*Math.random())+50,a=Math.floor(100*Math.random())+50,this.clouds[e].setX(i),this.clouds[e].setY(a)}}const D=1e3,y=4;class b{constructor(){console.log("TRexJump created"),t.canvas.width=700,t.canvas.height=400,t.canvas.setAttribute("style","margin: auto; position: fixed"),this.background=new l,this.stateManager=new w(this),this.tRex=new i,this.obstacleManager=new g,this.score=new d,this.cloudManager=new M,this.start()}start(){this.tRex.start(),this.obstacleManager.start(),this.cloudManager.start(),this.score.start(),this.sceneNum=0,b.gameSpeed=y}update(e){e/=10,this.stateManager.displayCurrentState(this),this.stateManager.updateCurrentState(this,e),t.draw()}static setGameSpeed(t){b.gameSpeed=t}static getGameSpeed(){return b.gameSpeed}getBackground(){return this.background}getSceneNum(){return this.sceneNum}setSceneNum(t){this.sceneNum=t}getTRex(){return this.tRex}getObstacleManager(){return this.obstacleManager}getScore(){return this.score}getStateManager(){return this.stateManager}getCloudManager(){return this.cloudManager}}(new class{constructor(){this.tRexJump=new b}update(t){const e=Date.now();this.tRexJump.update(e-t),t=Date.now(),requestAnimationFrame((()=>this.update(t)))}start(){requestAnimationFrame((()=>this.update(Date.now())))}}).start()})();